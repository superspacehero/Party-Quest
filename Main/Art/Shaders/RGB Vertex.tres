[gd_resource type="VisualShader" load_steps=38 format=3 uid="uid://k4fj3uwt03qa"]

[ext_resource type="Script" path="res://addons/shaderV/uv/scaleUV.gd" id="1_lj32i"]
[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/worley2x2.gd" id="2_lmfiu"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_ryp2s"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_bsgpu"]

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_4kg61"]
default_input_values = [0, false, 1, true, 2, false]
op_type = 6

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_q6wfh"]
parameter_name = "Integer_Positions"
default_value_enabled = true
default_value = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pvuuo"]
input_name = "node_position_world"

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_i2pf2"]
function = 23

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_l3mit"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ixy0h"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dnxpi"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_e7505"]
default_input_values = [0, Quaternion(1, 1, 1, 1), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ijvdv"]
parameter_name = "Red_Color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_86xyq"]
parameter_name = "Green_Color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_egp40"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_7q3w6"]
parameter_name = "Blue_Color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_h7qfw"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_q15p0"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeDistanceFade" id="VisualShaderNodeDistanceFade_1en11"]
default_input_values = [0, 2.0, 1, 6.0]

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_sr5w6"]
expanded_output_ports = [0]
parameter_name = "FadeDistances"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_5gxwj"]
constant = 0.25

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_aywe3"]
default_input_values = [2, false, 3, 4.0]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7iuc6"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_af6s3"]
default_input_values = [1, Vector3(1, 1, 0), 2, Vector3(0.5, 0.5, 0)]
initialized = true
script = ExtResource("1_lj32i")

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_4da2d"]
default_input_values = [0, 0.0, 1, 1.0, 2, 0.0]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yuhdw"]
expanded_output_ports = [0]
input_name = "viewport_size"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_rhx6p"]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_sdwfd"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4uvv0"]
input_name = "view_matrix"

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_du30l"]
function = 2

[sub_resource type="VisualShaderNodeTransformDecompose" id="VisualShaderNodeTransformDecompose_vin3p"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_irhwf"]
parameter_name = "Noise_Scale"
default_value_enabled = true
default_value = 8.0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_awhyr"]
default_input_values = [1, Vector3(0, 0, 0), 2, 5.0, 3, 0.0]
initialized = true
script = ExtResource("2_lmfiu")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_30obu"]
default_input_values = [0, 0.0, 1, 1.0]

[sub_resource type="VisualShaderNodeRandomRange" id="VisualShaderNodeRandomRange_xkuad"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_yhipg"]
function = 19

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_635dh"]
parameter_name = "Color_Randomization"
hint = 1
default_value_enabled = true
default_value = 0.25

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform bool Integer_Positions = true;
uniform float Color_Randomization : hint_range(0, 1) = 0.25;
uniform vec4 Red_Color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform vec4 Green_Color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform vec4 Blue_Color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
global uniform vec2 FadeDistances;
uniform float Noise_Scale = 8;




// 3D Noise with friendly permission by Inigo Quilez
vec3 hash_noise_range( vec3 p ) {
	p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
	return 2.0 * fract(fract(p)*4375.55) -1.;
}

// ScaleUV
vec2 _scaleUV(vec2 _scale_uv, vec2 _scale_vect, vec2 _pivot_vect) {
	return (_scale_uv - _pivot_vect) * _scale_vect + _pivot_vect;
}
// WorleyNoise2x2
float _cellular2x2NoiseFunc(vec2 P, float _jitter_w2x2) {
	float K = 0.142857142857; // 1/7
	float K2 = 0.0714285714285; // K/2
	
	vec2 Pi = floor(P) - floor(floor(P) * (1.0 / 289.0)) * 289.0;
	vec2 Pf = fract(P);
	vec4 Pfx = Pf.x + vec4(-0.5, -1.5, -0.5, -1.5);
	vec4 Pfy = Pf.y + vec4(-0.5, -0.5, -1.5, -1.5);
	vec4 p = ((34.0*(Pi.x + vec4(0.0, 1.0, 0.0, 1.0))+1.0)*(Pi.x + vec4(0.0, 1.0, 0.0, 1.0)))-floor(((34.0*(Pi.x + vec4(0.0, 1.0, 0.0, 1.0))+1.0)*(Pi.x + vec4(0.0, 1.0, 0.0, 1.0)))*(1.0/289.0))*289.0;
	p = ((34.0*(p + Pi.y + vec4(0.0, 0.0, 1.0, 1.0))+1.0)*(p + Pi.y + vec4(0.0, 0.0, 1.0, 1.0)))-floor(((34.0*(p + Pi.y + vec4(0.0, 0.0, 1.0, 1.0))+1.0)*(p + Pi.y + vec4(0.0, 0.0, 1.0, 1.0)))*(1.0/289.0))*289.0;
	vec4 ox = (p - floor(p * (1.0 / 7.0)) * 7.0)*K+K2;
	vec4 oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0)*K+K2;
	vec4 dx = Pfx + _jitter_w2x2*ox;
	vec4 dy = Pfy + _jitter_w2x2*oy;
	vec4 d = dx * dx + dy * dy;
	d.xy = min(d.xy, d.zw);
	d.x = min(d.x, d.y);
	return sqrt(d.x);
}

void fragment() {
// BooleanParameter:13
	bool n_out13p0 = Integer_Positions;


	bool n_out12p0;
// Switch:12
	bool n_in12p1 = true;
	bool n_in12p2 = false;
	if (n_out13p0) {
		n_out12p0 = n_in12p1;
	} else {
		n_out12p0 = n_in12p2;
	}


// Input:14
	vec3 n_out14p0 = NODE_POSITION_WORLD;


// VectorFunc:15
	vec3 n_out15p0 = round(n_out14p0);


	vec3 n_out11p0;
// If:11
	float n_in11p1 = 0.00000;
	float n_in11p2 = 0.00001;
	vec3 n_in11p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs((n_out12p0 ? 1.0 : 0.0) - n_in11p1) < n_in11p2)
	{
		n_out11p0 = n_out14p0;
	}
	else if((n_out12p0 ? 1.0 : 0.0) < n_in11p1)
	{
		n_out11p0 = n_in11p5;
	}
	else
	{
		n_out11p0 = n_out15p0;
	}


// VectorDecompose:10
	float n_out10p0 = n_out11p0.x;
	float n_out10p1 = n_out11p0.y;
	float n_out10p2 = n_out11p0.z;


// FloatParameter:9
	float n_out9p0 = Color_Randomization;


// FloatFunc:8
	float n_out8p0 = -(n_out9p0);


// RandomRange:7
	float n_out7p0 = mix(n_out8p0, n_out9p0, hash_noise_range(vec3(n_out10p0)).x);


// FloatOp:6
	float n_in6p1 = 1.00000;
	float n_out6p0 = n_out7p0 + n_in6p1;


// ColorParameter:20
	vec4 n_out20p0 = Red_Color;


// Input:25
	vec4 n_out25p0 = COLOR;
	float n_out25p1 = n_out25p0.r;
	float n_out25p2 = n_out25p0.g;
	float n_out25p3 = n_out25p0.b;


// VectorOp:19
	vec4 n_out19p0 = n_out20p0 * vec4(n_out25p1);


// ColorParameter:21
	vec4 n_out21p0 = Green_Color;


// VectorOp:22
	vec4 n_out22p0 = n_out21p0 * vec4(n_out25p2);


// Mix:17
	vec4 n_out17p0 = mix(n_out19p0, n_out22p0, vec4(n_out25p2));


// ColorParameter:23
	vec4 n_out23p0 = Blue_Color;


// VectorOp:24
	vec4 n_out24p0 = n_out23p0 * vec4(n_out25p3);


// Mix:16
	vec4 n_out16p0 = mix(n_out17p0, n_out24p0, vec4(n_out25p3));


// VectorOp:4
	vec4 n_out4p0 = vec4(n_out6p0) * n_out16p0;


// Vector2Parameter:27
	vec2 n_out27p0 = FadeDistances;
	float n_out27p1 = n_out27p0.r;
	float n_out27p2 = n_out27p0.g;


// DistanceFade:26
	float n_out26p0 = clamp(smoothstep(n_out27p1, n_out27p2, length(VERTEX)), 0.0, 1.0);


// FloatConstant:3
	float n_out3p0 = 0.250000;


// VectorOp:2
	vec4 n_out2p0 = n_out4p0 * vec4(n_out3p0);


// Fresnel:32
	float n_in32p3 = 4.00000;
	float n_out32p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in32p3);


// Input:34
	vec2 n_out34p0 = SCREEN_UV;


// Input:38
	vec2 n_out38p0 = VIEWPORT_SIZE;
	float n_out38p1 = n_out38p0.r;
	float n_out38p2 = n_out38p0.g;


// FloatOp:39
	float n_out39p0 = n_out38p1 / n_out38p2;


// VectorCompose:37
	float n_in37p1 = 1.00000;
	vec2 n_out37p0 = vec2(n_out39p0, n_in37p1);


	vec3 n_out36p0;
// ScaleUV:36
	vec3 n_in36p2 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out36p0.xy = _scaleUV(vec3(n_out34p0, 0.0).xy, vec3(n_out37p0, 0.0).xy, n_in36p2.xy);
	}


// Input:42
	mat4 n_out42p0 = VIEW_MATRIX;


// TransformDecompose:44
	vec3 n_out44p0 = n_out42p0[0].xyz;
	vec3 n_out44p1 = n_out42p0[1].xyz;
	vec3 n_out44p2 = n_out42p0[2].xyz;
	vec3 n_out44p3 = n_out42p0[3].xyz;


// VectorFunc:43
	vec3 n_out43p0 = -(n_out44p3);


// FloatParameter:46
	float n_out46p0 = Noise_Scale;


	float n_out48p0;
// WorleyNoise2x2:48
	float n_in48p3 = 0.00000;
	{
		n_out48p0 = _cellular2x2NoiseFunc((n_out36p0.xy+n_out43p0.xy)*n_out46p0, min(max(n_in48p3, 0.0), 1.0));
	}


// Output:0
	ALBEDO = vec3(n_out4p0.xyz);
	ALPHA = n_out26p0;
	EMISSION = vec3(n_out2p0.xyz);
	RIM = n_out32p0;
	ALPHA_SCISSOR_THRESHOLD = n_out48p0;


}
"
nodes/fragment/0/position = Vector2(760, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeVectorOp_e7505")
nodes/fragment/2/position = Vector2(180, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_5gxwj")
nodes/fragment/3/position = Vector2(-20, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_sdwfd")
nodes/fragment/4/position = Vector2(-40, 60)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_30obu")
nodes/fragment/6/position = Vector2(-200, 20)
nodes/fragment/7/node = SubResource("VisualShaderNodeRandomRange_xkuad")
nodes/fragment/7/position = Vector2(-420, -60)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatFunc_yhipg")
nodes/fragment/8/position = Vector2(-700, -20)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_635dh")
nodes/fragment/9/position = Vector2(-960, 120)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorDecompose_ryp2s")
nodes/fragment/10/position = Vector2(-700, -200)
nodes/fragment/11/node = SubResource("VisualShaderNodeIf_bsgpu")
nodes/fragment/11/position = Vector2(-960, -180)
nodes/fragment/12/node = SubResource("VisualShaderNodeSwitch_4kg61")
nodes/fragment/12/position = Vector2(-1200, -200)
nodes/fragment/13/node = SubResource("VisualShaderNodeBooleanParameter_q6wfh")
nodes/fragment/13/position = Vector2(-1500, -220)
nodes/fragment/14/node = SubResource("VisualShaderNodeInput_pvuuo")
nodes/fragment/14/position = Vector2(-1520, 80)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorFunc_i2pf2")
nodes/fragment/15/position = Vector2(-1184.98, 128.305)
nodes/fragment/16/node = SubResource("VisualShaderNodeMix_l3mit")
nodes/fragment/16/position = Vector2(-360, 1220)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_ixy0h")
nodes/fragment/17/position = Vector2(-600, 1040)
nodes/fragment/19/node = SubResource("VisualShaderNodeVectorOp_dnxpi")
nodes/fragment/19/position = Vector2(-1220, 880)
nodes/fragment/20/node = SubResource("VisualShaderNodeColorParameter_ijvdv")
nodes/fragment/20/position = Vector2(-1560, 860)
nodes/fragment/21/node = SubResource("VisualShaderNodeColorParameter_86xyq")
nodes/fragment/21/position = Vector2(-1120, 1060)
nodes/fragment/22/node = SubResource("VisualShaderNodeVectorOp_egp40")
nodes/fragment/22/position = Vector2(-780, 1080)
nodes/fragment/23/node = SubResource("VisualShaderNodeColorParameter_7q3w6")
nodes/fragment/23/position = Vector2(-1080, 1240)
nodes/fragment/24/node = SubResource("VisualShaderNodeVectorOp_h7qfw")
nodes/fragment/24/position = Vector2(-620, 1260)
nodes/fragment/25/node = SubResource("VisualShaderNodeInput_q15p0")
nodes/fragment/25/position = Vector2(-1820, 1260)
nodes/fragment/26/node = SubResource("VisualShaderNodeDistanceFade_1en11")
nodes/fragment/26/position = Vector2(180, 80)
nodes/fragment/27/node = SubResource("VisualShaderNodeVec2Parameter_sr5w6")
nodes/fragment/27/position = Vector2(-200, -180)
nodes/fragment/32/node = SubResource("VisualShaderNodeFresnel_aywe3")
nodes/fragment/32/position = Vector2(180, 440)
nodes/fragment/34/node = SubResource("VisualShaderNodeInput_7iuc6")
nodes/fragment/34/position = Vector2(-280, 800)
nodes/fragment/36/node = SubResource("VisualShaderNodeCustom_af6s3")
nodes/fragment/36/position = Vector2(100, 740)
nodes/fragment/37/node = SubResource("VisualShaderNodeVectorCompose_4da2d")
nodes/fragment/37/position = Vector2(-180, 640)
nodes/fragment/38/node = SubResource("VisualShaderNodeInput_yuhdw")
nodes/fragment/38/position = Vector2(-760, 600)
nodes/fragment/39/node = SubResource("VisualShaderNodeFloatOp_rhx6p")
nodes/fragment/39/position = Vector2(-420, 600)
nodes/fragment/42/node = SubResource("VisualShaderNodeInput_4uvv0")
nodes/fragment/42/position = Vector2(-320, 960)
nodes/fragment/43/node = SubResource("VisualShaderNodeVectorFunc_du30l")
nodes/fragment/43/position = Vector2(140, 960)
nodes/fragment/44/node = SubResource("VisualShaderNodeTransformDecompose_vin3p")
nodes/fragment/44/position = Vector2(-60, 960)
nodes/fragment/46/node = SubResource("VisualShaderNodeFloatParameter_irhwf")
nodes/fragment/46/position = Vector2(140, 1180)
nodes/fragment/48/node = SubResource("VisualShaderNodeCustom_awhyr")
nodes/fragment/48/position = Vector2(520, 980)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 5, 3, 0, 2, 1, 4, 0, 2, 0, 4, 0, 0, 0, 16, 0, 4, 1, 17, 0, 16, 0, 20, 0, 19, 0, 22, 0, 17, 1, 19, 0, 17, 0, 23, 0, 24, 0, 24, 0, 16, 1, 25, 1, 19, 1, 21, 0, 22, 0, 25, 2, 22, 1, 25, 2, 17, 2, 25, 3, 24, 1, 25, 3, 16, 2, 27, 1, 26, 0, 27, 2, 26, 1, 26, 0, 0, 1, 9, 0, 7, 2, 7, 0, 6, 0, 8, 0, 7, 1, 10, 0, 7, 0, 9, 0, 8, 0, 11, 0, 10, 0, 15, 0, 11, 4, 12, 0, 11, 0, 14, 0, 11, 3, 13, 0, 12, 0, 14, 0, 15, 0, 6, 0, 4, 0, 32, 0, 0, 11, 34, 0, 36, 0, 37, 0, 36, 1, 38, 1, 39, 0, 38, 2, 39, 1, 39, 0, 37, 0, 42, 0, 44, 0, 44, 3, 43, 0, 48, 0, 0, 19, 46, 0, 48, 2, 43, 0, 48, 1, 36, 0, 48, 0)
